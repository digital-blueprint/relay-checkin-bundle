resources:
  Dbp\Relay\CheckinBundle\Entity\CheckInAction:
    security: 'is_granted("IS_AUTHENTICATED_FULLY")'
    types: ['http://schema.org/CheckInAction']
    description: "Location check-in action"
    shortName: "CheckinCheckInAction"
    normalizationContext:
      groups: ["Checkin:output", "Place:output"]
      jsonld_embed_context: true
    denormalizationContext:
      groups: ["Checkin:input"]
    operations:

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\CheckinBundle\State\CheckInActionProvider
        uriTemplate: "/checkin/check-in-actions"
        normalizationContext:
          groups: ["Checkin:output", "Checkin:outputList"]
        openapiContext:
          summary: "Retrieves all CheckinCheckInActions of the current user."
          tags: ["Checkin"]
          parameters:
            - name: location
              in: query
              description: 'Location'
              type: string
              example: "f0ad66aaaf1debabb44a"

      ApiPlatform\Metadata\Post:
        processor: Dbp\Relay\CheckinBundle\State\CheckInActionProcessor
        uriTemplate: "/checkin/check-in-actions"
        openapiContext:
          tags: ["Checkin"]
          requestBody:
            content:
              application/json:
                schema:
                  type: "object"
                  example: '{"location": "/checkin/places/f0ad66aaaf1debabb44a", "seatNumber": 17}'

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      agent:
        iri: 'http://schema.org/Person'
      location:
        iri: "http://schema.org/location"
      seatNumber:
        iri: "http://schema.org/seatNumber"
      startTime:
        iri: "https://schema.org/startTime"
      endTime:
        iri: "https://schema.org/endTime"

  Dbp\Relay\CheckinBundle\Entity\Place:
    security: 'is_granted("IS_AUTHENTICATED_FULLY")'
    types: ['http://schema.org/Place']
    description: "Check-in place"
    shortName: "CheckinPlace"
    normalizationContext:
      groups: ["Place:output", "Checkin:outputList"]
      jsonld_embed_context: true
    denormalizationContext:
      groups: ["Place:input"]
    operations:

      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\CheckinBundle\State\PlaceProvider
        uriTemplate: "/checkin/places/{identifier}"
        openapiContext:
          tags: ["Checkin"]

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\CheckinBundle\State\PlaceProvider
        uriTemplate: "/checkin/places"
        openapiContext:
          tags: ["Checkin"]
          parameters:
            - name: search
              in: query
              description: 'Search for a place name'
              type: string
              example: "Coworkingspace"

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      name:
        iri: 'http://schema.org/name'
      maximumPhysicalAttendeeCapacity:
        iri: "http://schema.org/maximumPhysicalAttendeeCapacity"

  Dbp\Relay\CheckinBundle\Entity\GuestCheckInAction:
    security: 'is_granted("IS_AUTHENTICATED_FULLY")'
    types: ['http://schema.org/CheckInAction']
    description: "Location guest check-in action"
    shortName: "CheckinGuestCheckInAction"
    normalizationContext:
      groups: ["Checkin:output", "Place:output"]
      jsonld_embed_context: true
    denormalizationContext:
      groups: ["Checkin:input"]
    operations:

      ApiPlatform\Metadata\Post:
        processor: Dbp\Relay\CheckinBundle\State\GuestCheckInActionProcessor
        uriTemplate: "/checkin/guest-check-in-actions"
        openapiContext:
          tags: ["Checkin"]
          requestBody:
            content:
              application/json:
                schema:
                  type: "object"
                  example: '{"location": "/checkin/places/f0ad66aaaf1debabb44a", "seatNumber": 17, "email": "test@test.com", "endTime": "2021-10-19T08:03:11.336Z"}'

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      agent:
        iri: 'http://schema.org/Person'
      location:
        iri: "http://schema.org/location"
      seatNumber:
        iri: "http://schema.org/seatNumber"
      startTime:
        iri: "https://schema.org/startTime"
      endTime:
        iri: "https://schema.org/endTime"
      email:
        iri: "http://schema.org/email"

  Dbp\Relay\CheckinBundle\Entity\CheckOutAction:
    security: 'is_granted("IS_AUTHENTICATED_FULLY")'
    types: ['http://schema.org/CheckOutAction']
    description: "Location check-out action"
    shortName: "CheckinCheckOutAction"
    normalizationContext:
      groups: ["CheckOut:output", "Place:output"]
      jsonld_embed_context: true
    denormalizationContext:
      groups: ["CheckOut:input"]
    operations:

      ApiPlatform\Metadata\Post:
        processor: Dbp\Relay\CheckinBundle\State\CheckOutActionProcessor
        uriTemplate: "/checkin/check-out-actions"
        openapiContext:
          tags: ["Checkin"]
          requestBody:
            content:
              application/json:
                schema:
                  type: "object"
                  example: '{"location": "/checkin/places/f0ad66aaaf1debabb44a", "seatNumber": 17}'

    properties:
      identifier:
        identifier: true
        iri: "http://schema.org/identifier"
      agent:
        iri: 'http://schema.org/Person'
      location:
        iri: "http://schema.org/location"
      seatNumber:
        iri: "http://schema.org/seatNumber"
